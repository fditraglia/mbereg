// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// testy
List testy(arma::vec y, arma::vec Tobs, arma::vec z, arma::mat normal_draws);
RcppExport SEXP _mbereg_testy(SEXP ySEXP, SEXP TobsSEXP, SEXP zSEXP, SEXP normal_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tobs(TobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type normal_draws(normal_drawsSEXP);
    rcpp_result_gen = Rcpp::wrap(testy(y, Tobs, z, normal_draws));
    return rcpp_result_gen;
END_RCPP
}
// test_Qn
double test_Qn(double a1, arma::vec y, arma::vec Tobs, arma::vec z);
RcppExport SEXP _mbereg_test_Qn(SEXP a1SEXP, SEXP ySEXP, SEXP TobsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tobs(TobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(test_Qn(a1, y, Tobs, z));
    return rcpp_result_gen;
END_RCPP
}
// test_Qn_opt
List test_Qn_opt(arma::vec y, arma::vec Tobs, arma::vec z);
RcppExport SEXP _mbereg_test_Qn_opt(SEXP ySEXP, SEXP TobsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tobs(TobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(test_Qn_opt(y, Tobs, z));
    return rcpp_result_gen;
END_RCPP
}
// BCS_test_cpp
List BCS_test_cpp(double beta_null, arma::vec y, arma::vec Tobs, arma::vec z, arma::mat normal_draws);
RcppExport SEXP _mbereg_BCS_test_cpp(SEXP beta_nullSEXP, SEXP ySEXP, SEXP TobsSEXP, SEXP zSEXP, SEXP normal_drawsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type beta_null(beta_nullSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tobs(TobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type normal_draws(normal_drawsSEXP);
    rcpp_result_gen = Rcpp::wrap(BCS_test_cpp(beta_null, y, Tobs, z, normal_draws));
    return rcpp_result_gen;
END_RCPP
}
// center
arma::mat center(arma::mat M);
RcppExport SEXP _mbereg_center(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(center(M));
    return rcpp_result_gen;
END_RCPP
}
// mycov
arma::mat mycov(arma::mat M1, arma::mat M2);
RcppExport SEXP _mbereg_mycov(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(mycov(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// SS
double SS(arma::vec v);
RcppExport SEXP _mbereg_SS(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(SS(v));
    return rcpp_result_gen;
END_RCPP
}
// SS_neg
double SS_neg(arma::vec v);
RcppExport SEXP _mbereg_SS_neg(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(SS_neg(v));
    return rcpp_result_gen;
END_RCPP
}
// sqrtm_cpp
arma::mat sqrtm_cpp(arma::mat M);
RcppExport SEXP _mbereg_sqrtm_cpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(sqrtm_cpp(M));
    return rcpp_result_gen;
END_RCPP
}
// cov2cor_cpp
arma::mat cov2cor_cpp(arma::mat V);
RcppExport SEXP _mbereg_cov2cor_cpp(SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(cov2cor_cpp(V));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mbereg_testy", (DL_FUNC) &_mbereg_testy, 4},
    {"_mbereg_test_Qn", (DL_FUNC) &_mbereg_test_Qn, 4},
    {"_mbereg_test_Qn_opt", (DL_FUNC) &_mbereg_test_Qn_opt, 3},
    {"_mbereg_BCS_test_cpp", (DL_FUNC) &_mbereg_BCS_test_cpp, 5},
    {"_mbereg_center", (DL_FUNC) &_mbereg_center, 1},
    {"_mbereg_mycov", (DL_FUNC) &_mbereg_mycov, 2},
    {"_mbereg_SS", (DL_FUNC) &_mbereg_SS, 1},
    {"_mbereg_SS_neg", (DL_FUNC) &_mbereg_SS_neg, 1},
    {"_mbereg_sqrtm_cpp", (DL_FUNC) &_mbereg_sqrtm_cpp, 1},
    {"_mbereg_cov2cor_cpp", (DL_FUNC) &_mbereg_cov2cor_cpp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mbereg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
