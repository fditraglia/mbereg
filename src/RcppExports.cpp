// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// center
arma::mat center(arma::mat M);
RcppExport SEXP mbereg_center(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(center(M));
    return rcpp_result_gen;
END_RCPP
}
// mycov
arma::mat mycov(arma::mat M1, arma::mat M2);
RcppExport SEXP mbereg_mycov(SEXP M1SEXP, SEXP M2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M1(M1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M2(M2SEXP);
    rcpp_result_gen = Rcpp::wrap(mycov(M1, M2));
    return rcpp_result_gen;
END_RCPP
}
// foo
arma::vec foo(arma::vec z);
RcppExport SEXP mbereg_foo(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(foo(z));
    return rcpp_result_gen;
END_RCPP
}
// testy
List testy(arma::vec y, arma::vec Tobs, arma::vec z);
RcppExport SEXP mbereg_testy(SEXP ySEXP, SEXP TobsSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Tobs(TobsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(testy(y, Tobs, z));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"mbereg_center", (DL_FUNC) &mbereg_center, 1},
    {"mbereg_mycov", (DL_FUNC) &mbereg_mycov, 2},
    {"mbereg_foo", (DL_FUNC) &mbereg_foo, 1},
    {"mbereg_testy", (DL_FUNC) &mbereg_testy, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mbereg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
